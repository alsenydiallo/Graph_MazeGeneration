Name: Alseny Diallo 
Email: alsenidiallo@live.com

Project overview:
----------------
This project is an implementation of a Java application that creates a maze using 
depth first search (DFS). Starting with a randomly selected vertex 's' on the left side the
graph, we visit every vertex in the graph keeping track of the previous “parent node” which defines
the spanning tree in the center of the figure. We imagine the tree vertices to be at the center of a
grid of cells each surrounded by four walls and the edges of the tree specify which walls are to be
removed; the remaining walls become the boundaries of the maze. r program will read the width and height of 
the grid and the name of the output file via three command line arguments and output a text description of 
the maze which could then be used to convert your output into an ImageMagick Vector Graphics (MVG) file; 
this file can then be converted into the image format of your choice

Included file:
--------------
- Graph.java (contain graph interface)
- GraphSearch.java (contain implementation of DFS and spanning tree of previous parent node of 
visited vertex
- MazeGen.java (determine the walls of each cell from it neighbors)
- MazeGraph.java (contain graph implementation)
- README 

Build/Run/Test instruction:
---------------------------
create a Java project in eclipse 
Use execution environment JRE (JavaSE-1.8)
r program will read the width and height of 
the grid and the name of the output file via three command line arguments and output a text description of 
the maze which could then be used to convert your output into an ImageMagick Vector Graphics (MVG) file; 
this file can then be converted into the image format of your choice

eg: java MazeGen 8 8 m.txt

